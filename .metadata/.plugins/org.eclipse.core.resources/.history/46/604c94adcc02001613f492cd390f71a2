import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;

public class HeuristicParameters  {
	// Four constant parameters
	protected double a;
	protected double b;
	protected double c;
	protected double d;
	
	public HeuristicParameters() {
		this.a = 0;
		this.b = 0;
		this.c = 0;
		this.d = 0;
	}
	
	public HeuristicParameters(double a, double b, double c, double d) {
		this.a = a;
		this.b = b;
		this.c = c;
		this.d = d;
	}
	
	/**
	 * Setter to set a value
	 * @param a the a to set
	 */
	public void setA(double a) {
		this.a = a;
	}

	/**
	 * Setter to set b value
	 * @param b the b to set
	 */
	public void setB(double b) {
		this.b = b;
	}

	/**
	 * Setter to set c value
	 * @param c the c to set
	 */
	public void setC(double c) {
		this.c = c;
	}

	/**
	 * Setter to set d value
	 * @param d the d to set
	 */
	public void setD(double d) {
		this.d = d;
	}

	/**
	 * This function reads from the given heuristic.txt and then loads the given heuristic function into a new HeuristicParameter constructor.
	 * 
	 * @return: The new heuristic parameter as read from the 
	 * @throws FileNotFoundException
	 * @throws IOException
	 */
	public static HeuristicParameters loadFirstHeuristicParameters() throws FileNotFoundException, IOException {
		BufferedReader br = new BufferedReader(new FileReader("./heuristic.txt"));
		String line;
		line = br.readLine();
		assert(line!=null);
		String tokens[] = line.split(" ");
		assert(tokens.length == 5);
		br.close();
		return new HeuristicParameters(Double.parseDouble(tokens[0]), Double.parseDouble(tokens[1]), 
				Double.parseDouble(tokens[2]), Double.parseDouble(tokens[3]));
	}
}
